# interpreter for shell commands (needs to be POSIX compatible)
set shell sh
# Uncomment the desired shell if applicable
# set shell zsh
# set shell fish

# General Settings
set preview true
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'
set icons
set ignorecase true
set shellopts '-eu'
set ifs "\n"
set scrolloff 10

# Mappings for Shell Commands
map <enter> shell

# Execute Current File (if executable)
map x $$f
map X !$f

# Jump with autojump integration
cmd aj %lf -remote "send $id cd '$(autojump $1)'"
map J push :aj<space>

# Select File using fzf
cmd fzf_select ${{
  selected=$(fzf)
  [ -n "$selected" ] && lf -remote "send $id select \"$selected\""
}}
map f fzf_select

# File Open Actions
map o open $f
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
        application/octet-stream) gf show $f ;;
        application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
        image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty|application/x-subrip) $EDITOR $fx ;;
        image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
        image/svg+xml) display -- $f ;;
        image/*) setsid -f nsxiv -aio $f >/dev/null 2>&1 ;;
        audio/*) mpv --audio-display=no $f ;;
        video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
        application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
        application/pgp-encrypted) $EDITOR $fx ;;
        *) setsid -f $OPENER $f >/dev/null 2>&1 ;;
    esac
}}

# Delete and Trash Commands
cmd delete %set -f; rm -rf $fx
cmd trash ${{
  printf '%s\n' $fx | xargs -I {} trash-put {}
}}
map <delete> delete
map <bs2> trash
map D delete
map t trash
map dd trash

# Archive and Unarchive Commands
cmd unarchive ${{
  case "$f" in
      *.gz) gzip -d "$f" ;;
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.xz) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}
cmd zip %zip -r "$f.zip" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar czvf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Mappings for Archive Commands
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Additional Mappings
map C clear
map U unselect
map ee $$EDITOR "$f"
map br $vimv $fx

# vim:foldmethod=marker:foldlevel=0

